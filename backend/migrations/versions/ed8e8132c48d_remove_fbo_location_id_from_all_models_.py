"""Remove fbo_location_id from all models for single-tenant architecture

Revision ID: ed8e8132c48d
Revises: 1234567890ab
Create Date: 2025-06-29 19:53:45.957550

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ed8e8132c48d'
down_revision = '1234567890ab'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aircraft_type_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('aircraft_type_id', sa.Integer(), nullable=False),
    sa.Column('base_min_fuel_gallons_for_waiver', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['aircraft_type_id'], ['aircraft_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('aircraft_type_id', name='uq_aircraft_type_config')
    )
    with op.batch_alter_table('aircraft_type_configs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_aircraft_type_configs_aircraft_type_id'), ['aircraft_type_id'], unique=False)

    with op.batch_alter_table('fbo_aircraft_type_configs', schema=None) as batch_op:
        batch_op.drop_index('ix_fbo_aircraft_type_configs_aircraft_type_id')
        batch_op.drop_index('ix_fbo_aircraft_type_configs_fbo_location_id')

    op.drop_table('fbo_aircraft_type_configs')
    with op.batch_alter_table('fee_rule_overrides', schema=None) as batch_op:
        batch_op.drop_constraint('_fbo_aircraft_fee_rule_uc', type_='unique')
        batch_op.drop_index('ix_fee_rule_overrides_fbo_location_id')
        batch_op.create_unique_constraint('_aircraft_fee_rule_uc', ['aircraft_type_id', 'fee_rule_id'])
        batch_op.drop_column('fbo_location_id')

    with op.batch_alter_table('fuel_prices', schema=None) as batch_op:
        batch_op.drop_index('ix_fuel_prices_fbo_location_id')
        batch_op.drop_constraint('uq_fuel_price_fbo_fuel_date', type_='unique')
        batch_op.create_unique_constraint('_fuel_price_uc', ['fuel_type_id', 'effective_date'])
        batch_op.drop_column('fbo_location_id')

    with op.batch_alter_table('receipts', schema=None) as batch_op:
        batch_op.drop_index('ix_receipts_fbo_location_id')
        batch_op.drop_constraint('uq_receipt_fbo_number', type_='unique')
        batch_op.create_unique_constraint('_receipt_number_uc', ['receipt_number'])
        batch_op.drop_column('fbo_location_id')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index('ix_users_fbo_location_id')
        batch_op.drop_column('fbo_location_id')

    with op.batch_alter_table('waiver_tiers', schema=None) as batch_op:
        batch_op.drop_index('ix_waiver_tiers_fbo_location_id')
        batch_op.create_unique_constraint(None, ['name'])
        batch_op.drop_column('fbo_location_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('waiver_tiers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('fbo_location_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('ix_waiver_tiers_fbo_location_id', ['fbo_location_id'], unique=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('fbo_location_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_index('ix_users_fbo_location_id', ['fbo_location_id'], unique=False)

    with op.batch_alter_table('receipts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('fbo_location_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint('_receipt_number_uc', type_='unique')
        batch_op.create_unique_constraint('uq_receipt_fbo_number', ['fbo_location_id', 'receipt_number'], postgresql_nulls_not_distinct=False)
        batch_op.create_index('ix_receipts_fbo_location_id', ['fbo_location_id'], unique=False)

    with op.batch_alter_table('fuel_prices', schema=None) as batch_op:
        batch_op.add_column(sa.Column('fbo_location_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint('_fuel_price_uc', type_='unique')
        batch_op.create_unique_constraint('uq_fuel_price_fbo_fuel_date', ['fbo_location_id', 'fuel_type_id', 'effective_date'], postgresql_nulls_not_distinct=False)
        batch_op.create_index('ix_fuel_prices_fbo_location_id', ['fbo_location_id'], unique=False)

    with op.batch_alter_table('fee_rule_overrides', schema=None) as batch_op:
        batch_op.add_column(sa.Column('fbo_location_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint('_aircraft_fee_rule_uc', type_='unique')
        batch_op.create_index('ix_fee_rule_overrides_fbo_location_id', ['fbo_location_id'], unique=False)
        batch_op.create_unique_constraint('_fbo_aircraft_fee_rule_uc', ['fbo_location_id', 'aircraft_type_id', 'fee_rule_id'], postgresql_nulls_not_distinct=False)

    op.create_table('fbo_aircraft_type_configs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('fbo_location_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('aircraft_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('base_min_fuel_gallons_for_waiver', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['aircraft_type_id'], ['aircraft_types.id'], name='fbo_aircraft_type_configs_aircraft_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='fbo_aircraft_type_configs_pkey'),
    sa.UniqueConstraint('fbo_location_id', 'aircraft_type_id', name='uq_fbo_aircraft_config', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    with op.batch_alter_table('fbo_aircraft_type_configs', schema=None) as batch_op:
        batch_op.create_index('ix_fbo_aircraft_type_configs_fbo_location_id', ['fbo_location_id'], unique=False)
        batch_op.create_index('ix_fbo_aircraft_type_configs_aircraft_type_id', ['aircraft_type_id'], unique=False)

    with op.batch_alter_table('aircraft_type_configs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_aircraft_type_configs_aircraft_type_id'))

    op.drop_table('aircraft_type_configs')
    # ### end Alembic commands ###

"""add preferences to users table

Revision ID: 06442d69e349
Revises: bf28e443a1dd
Create Date: 2025-07-02 00:46:32.290160

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '06442d69e349'
down_revision = 'bf28e443a1dd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('aircraft_classification_mappings', schema=None) as batch_op:
        batch_op.drop_index('ix_aircraft_type_fee_category_mappings_fbo_location_id')

    op.drop_table('aircraft_classification_mappings')
    with op.batch_alter_table('aircraft_types', schema=None) as batch_op:
        batch_op.drop_column('default_fee_category_id')

    with op.batch_alter_table('fee_rule_overrides', schema=None) as batch_op:
        batch_op.create_unique_constraint('_aircraft_type_fee_rule_uc', ['aircraft_type_id', 'fee_rule_id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('preferences', sa.JSON(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('preferences')

    with op.batch_alter_table('fee_rule_overrides', schema=None) as batch_op:
        batch_op.drop_constraint('_aircraft_type_fee_rule_uc', type_='unique')

    with op.batch_alter_table('aircraft_types', schema=None) as batch_op:
        batch_op.add_column(sa.Column('default_fee_category_id', sa.INTEGER(), autoincrement=False, nullable=True))

    op.create_table('aircraft_classification_mappings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('fbo_location_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('aircraft_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('classification_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['aircraft_type_id'], ['aircraft_types.id'], name='aircraft_type_fee_category_mappings_aircraft_type_id_fkey'),
    sa.ForeignKeyConstraint(['classification_id'], ['aircraft_classifications.id'], name='aircraft_type_fee_category_mappings_fee_category_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='aircraft_type_fee_category_mappings_pkey'),
    sa.UniqueConstraint('fbo_location_id', 'aircraft_type_id', name='uq_aircraft_type_fbo_mapping', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    with op.batch_alter_table('aircraft_classification_mappings', schema=None) as batch_op:
        batch_op.create_index('ix_aircraft_type_fee_category_mappings_fbo_location_id', ['fbo_location_id'], unique=False)

    # ### end Alembic commands ###

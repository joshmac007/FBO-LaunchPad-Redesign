"""add fuel_prices table

Revision ID: 326a6a78feee
Revises: a525066160e4
Create Date: 2025-06-26 06:41:54.789899

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '326a6a78feee'
down_revision = 'a525066160e4'
branch_labels = None
depends_on = None


def upgrade():
    # Check if table already exists
    connection = op.get_bind()
    result = connection.execute(sa.text("""
        SELECT EXISTS (
            SELECT FROM information_schema.tables 
            WHERE table_schema = 'public' 
            AND table_name = 'fuel_prices'
        );
    """))
    table_exists = result.scalar()
    
    if not table_exists:
        # ### commands auto generated by Alembic - please adjust! ###
        op.create_table('fuel_prices',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('fbo_location_id', sa.Integer(), nullable=False),
        sa.Column('fuel_type', sa.Enum('JET_A', 'AVGAS_100LL', 'SAF_JET_A', name='fueltypeenum'), nullable=False),
        sa.Column('price', sa.Numeric(precision=10, scale=4), nullable=False),
        sa.Column('currency', sa.String(length=3), nullable=False),
        sa.Column('effective_date', sa.DateTime(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('fbo_location_id', 'fuel_type', 'effective_date', name='uq_fuel_price_fbo_fuel_date')
        )
        with op.batch_alter_table('fuel_prices', schema=None) as batch_op:
            batch_op.create_index(batch_op.f('ix_fuel_prices_effective_date'), ['effective_date'], unique=False)
            batch_op.create_index(batch_op.f('ix_fuel_prices_fbo_location_id'), ['fbo_location_id'], unique=False)
            batch_op.create_index(batch_op.f('ix_fuel_prices_fuel_type'), ['fuel_type'], unique=False)

    with op.batch_alter_table('fee_categories', schema=None) as batch_op:
        batch_op.drop_constraint('uq_fee_categories_fbo_location_id_name', type_='unique')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('fee_categories', schema=None) as batch_op:
        batch_op.create_unique_constraint('uq_fee_categories_fbo_location_id_name', ['fbo_location_id', 'name'], postgresql_nulls_not_distinct=False)

    with op.batch_alter_table('fuel_prices', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_fuel_prices_fuel_type'))
        batch_op.drop_index(batch_op.f('ix_fuel_prices_fbo_location_id'))
        batch_op.drop_index(batch_op.f('ix_fuel_prices_effective_date'))

    op.drop_table('fuel_prices')
    # ### end Alembic commands ###

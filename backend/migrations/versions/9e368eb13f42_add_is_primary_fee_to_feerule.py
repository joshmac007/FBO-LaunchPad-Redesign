"""Add is_primary_fee to FeeRule

Revision ID: 9e368eb13f42
Revises: 326a6a78feee
Create Date: 2025-06-26 19:48:30.375797

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9e368eb13f42'
down_revision = '326a6a78feee'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop role_permissions table if it exists (conditional drop)
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    if 'role_permissions' in inspector.get_table_names():
        op.drop_table('role_permissions')
    
    # Check if columns exist before adding them
    fee_rules_columns = [col['name'] for col in inspector.get_columns('fee_rules')] if 'fee_rules' in inspector.get_table_names() else []
    fuel_orders_columns = [col['name'] for col in inspector.get_columns('fuel_orders')] if 'fuel_orders' in inspector.get_table_names() else []
    
    if 'fee_rules' in inspector.get_table_names():
        with op.batch_alter_table('fee_rules', schema=None) as batch_op:
            if 'is_primary_fee' not in fee_rules_columns:
                batch_op.add_column(sa.Column('is_primary_fee', sa.Boolean(), server_default='f', nullable=False))

    if 'fuel_orders' in inspector.get_table_names():
        with op.batch_alter_table('fuel_orders', schema=None) as batch_op:
            if 'service_type' not in fuel_orders_columns:
                batch_op.add_column(sa.Column('service_type', sa.String(length=50), nullable=False))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('fuel_orders', schema=None) as batch_op:
        batch_op.drop_column('service_type')

    with op.batch_alter_table('fee_rules', schema=None) as batch_op:
        batch_op.drop_column('is_primary_fee')

    op.create_table('role_permissions',
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name='role_permissions_permission_id_fkey'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='role_permissions_role_id_fkey'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', name='role_permissions_pkey')
    )
    # ### end Alembic commands ###

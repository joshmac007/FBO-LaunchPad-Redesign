"""feat: add core receipt system tables

Revision ID: 52e3947c01a7
Revises: aeaa326ddd7c
Create Date: 2025-06-05 06:43:14.888197

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '52e3947c01a7'
down_revision = 'aeaa326ddd7c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aircraft_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('base_min_fuel_gallons_for_waiver', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('default_fee_category_id', sa.Integer(), nullable=True),
    sa.Column('default_max_gross_weight_lbs', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('aircraft_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_aircraft_types_name'), ['name'], unique=True)

    op.create_table('fee_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fbo_location_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fbo_location_id', 'name', name='uq_fee_category_fbo_name')
    )
    with op.batch_alter_table('fee_categories', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_fee_categories_fbo_location_id'), ['fbo_location_id'], unique=False)

    op.create_table('waiver_tiers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fbo_location_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('fuel_uplift_multiplier', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('fees_waived_codes', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('tier_priority', sa.Integer(), nullable=False),
    sa.Column('is_caa_specific_tier', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('waiver_tiers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_waiver_tiers_fbo_location_id'), ['fbo_location_id'], unique=False)

    op.create_table('aircraft_type_fee_category_mappings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fbo_location_id', sa.Integer(), nullable=False),
    sa.Column('aircraft_type_id', sa.Integer(), nullable=False),
    sa.Column('fee_category_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['aircraft_type_id'], ['aircraft_types.id'], ),
    sa.ForeignKeyConstraint(['fee_category_id'], ['fee_categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fbo_location_id', 'aircraft_type_id', name='uq_aircraft_type_fbo_mapping')
    )
    with op.batch_alter_table('aircraft_type_fee_category_mappings', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_aircraft_type_fee_category_mappings_fbo_location_id'), ['fbo_location_id'], unique=False)

    op.create_table('fee_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fbo_location_id', sa.Integer(), nullable=False),
    sa.Column('fee_name', sa.String(length=100), nullable=False),
    sa.Column('fee_code', sa.String(length=50), nullable=False),
    sa.Column('applies_to_fee_category_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('is_taxable', sa.Boolean(), nullable=False),
    sa.Column('is_potentially_waivable_by_fuel_uplift', sa.Boolean(), nullable=False),
    sa.Column('calculation_basis', sa.Enum('FIXED_PRICE', 'PER_UNIT_SERVICE', 'NOT_APPLICABLE', name='calculationbasis'), nullable=False),
    sa.Column('waiver_strategy', sa.Enum('NONE', 'SIMPLE_MULTIPLIER', 'TIERED_MULTIPLIER', name='waiverstrategy'), nullable=False),
    sa.Column('simple_waiver_multiplier', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('has_caa_override', sa.Boolean(), nullable=False),
    sa.Column('caa_override_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('caa_waiver_strategy_override', sa.Enum('NONE', 'SIMPLE_MULTIPLIER', 'TIERED_MULTIPLIER', name='waiverstrategy'), nullable=True),
    sa.Column('caa_simple_waiver_multiplier_override', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['applies_to_fee_category_id'], ['fee_categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fbo_location_id', 'fee_code', name='uq_fee_rule_fbo_code')
    )
    with op.batch_alter_table('fee_rules', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_fee_rules_fbo_location_id'), ['fbo_location_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_fee_rules_fee_code'), ['fee_code'], unique=False)

    op.create_table('receipts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('receipt_number', sa.String(length=50), nullable=False),
    sa.Column('fbo_location_id', sa.Integer(), nullable=False),
    sa.Column('fuel_order_id', sa.Integer(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('aircraft_type_at_receipt_time', sa.String(length=100), nullable=True),
    sa.Column('fuel_type_at_receipt_time', sa.String(length=50), nullable=True),
    sa.Column('fuel_quantity_gallons_at_receipt_time', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('fuel_unit_price_at_receipt_time', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('fuel_subtotal', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_fees_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_waivers_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('tax_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('grand_total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'GENERATED', 'PAID', 'VOID', name='receiptstatus'), nullable=False),
    sa.Column('is_caa_applied', sa.Boolean(), nullable=False),
    sa.Column('generated_at', sa.DateTime(), nullable=True),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.Column('updated_by_user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['fuel_order_id'], ['fuel_orders.id'], ),
    sa.ForeignKeyConstraint(['updated_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fbo_location_id', 'receipt_number', name='uq_receipt_fbo_number')
    )
    with op.batch_alter_table('receipts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_receipts_fbo_location_id'), ['fbo_location_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_receipts_receipt_number'), ['receipt_number'], unique=False)

    op.create_table('receipt_line_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('receipt_id', sa.Integer(), nullable=False),
    sa.Column('line_item_type', sa.Enum('FUEL', 'FEE', 'WAIVER', 'TAX', 'DISCOUNT', name='lineitemtype'), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=False),
    sa.Column('fee_code_applied', sa.String(length=50), nullable=True),
    sa.Column('quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['receipt_id'], ['receipts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_placeholder', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('is_caa_member', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('caa_member_id', sa.String(length=50), nullable=True))
        batch_op.create_unique_constraint(None, ['caa_member_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('caa_member_id')
        batch_op.drop_column('is_caa_member')
        batch_op.drop_column('is_placeholder')

    op.drop_table('receipt_line_items')
    with op.batch_alter_table('receipts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_receipts_receipt_number'))
        batch_op.drop_index(batch_op.f('ix_receipts_fbo_location_id'))

    op.drop_table('receipts')
    with op.batch_alter_table('fee_rules', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_fee_rules_fee_code'))
        batch_op.drop_index(batch_op.f('ix_fee_rules_fbo_location_id'))

    op.drop_table('fee_rules')
    with op.batch_alter_table('aircraft_type_fee_category_mappings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_aircraft_type_fee_category_mappings_fbo_location_id'))

    op.drop_table('aircraft_type_fee_category_mappings')
    with op.batch_alter_table('waiver_tiers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_waiver_tiers_fbo_location_id'))

    op.drop_table('waiver_tiers')
    with op.batch_alter_table('fee_categories', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_fee_categories_fbo_location_id'))

    op.drop_table('fee_categories')
    with op.batch_alter_table('aircraft_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_aircraft_types_name'))

    op.drop_table('aircraft_types')
    # ### end Alembic commands ###

"""add_service_type_to_fuel_order

Revision ID: 0f4ff33ca336
Revises: f8606116088a
Create Date: 2025-06-22 19:30:23.402897

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0f4ff33ca336'
down_revision = 'f8606116088a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if role_permissions table exists before dropping it
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    if 'role_permissions' in inspector.get_table_names():
        op.drop_table('role_permissions')
    
    # Check if service_type column already exists before adding it
    fuel_orders_columns = [col['name'] for col in inspector.get_columns('fuel_orders')]
    
    with op.batch_alter_table('fuel_orders', schema=None) as batch_op:
        if 'service_type' not in fuel_orders_columns:
            batch_op.add_column(sa.Column('service_type', sa.String(length=50), nullable=False))
        batch_op.alter_column('customer_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('fuel_orders', schema=None) as batch_op:
        batch_op.alter_column('customer_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('service_type')

    op.create_table('role_permissions',
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name='role_permissions_permission_id_fkey'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='role_permissions_role_id_fkey'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', name='role_permissions_pkey')
    )
    # ### end Alembic commands ###
